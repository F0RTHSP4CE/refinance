{% extends "base.jinja2" %}
{% from "transaction/macro_list.jinja2" import transaction_list with context %}
{% from 'widgets/tag_inline.jinja2' import tag_inline %}
{% from 'widgets/pagination.jinja2' import pagination_control %}

{% block title %}Entity {{ entity.name }}{% endblock %}

{% block content %}
<style>
    .top-section {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }

    .details-balance {
        flex: 0 0 auto;
        min-width: 300px;
    }

    .stats {
        flex: 1 1 0;
    }

    @media (max-width: 1200px) {
        .top-section {
            flex-direction: column;
        }
    }

    .charts {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }

    .chart-container {
        flex: 1 1 45%;
        max-width: 45%;
        box-sizing: border-box;
    }

    .chart-container canvas {
        width: 100% !important;
        height: auto !important;
    }

    @media (max-width: 600px) {
        .chart-container {
            flex: 1 1 100%;
            max-width: 100%;
        }
    }
</style>
<div class="top-section">
    <div class="details-balance">
        <h2>Details</h2>
        <p>
        <table>
            <tr>
                <td>ID</td>
                <td>{{ entity.id }}</td>
            </tr>
            <tr>
                <td>Name</td>
                <td>{{entity.name}}</td>
            </tr>
            <tr>
                <td>Comment</td>
                <td>{{ entity.comment or "" }}</td>
            </tr>
            <tr>
                <td>Tags</td>
                <td>
                    {% for tag in entity.tags %}
                    {{ tag_inline(tag) }}
                    {% endfor %}
                </td>
            </tr>
            <tr>
                <td>Active</td>
                <td>{{ entity.active }}</td>
            </tr>
            <tr>
                <td>Created at</td>
                <td>{{ human_readable_date(entity.created_at) | safe }}</td>
            </tr>
            <tr>
                <td>Modified at</td>
                <td>{{ human_readable_date(entity.modified_at) | safe if entity.modified_at else "" }}</td>
            </tr>
            <tr>
                <td>Authentication</td>
                <td>
                    {% if entity.auth %}
                    <table>
                        <thead>
                            <tr>
                                <th>Provider</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% set labels = {
                            "telegram_id": "Telegram ID",
                            "signal_id": "Signal ID",
                            "whatsapp_number": "WhatsApp Number",
                            "email": "Email"
                            } %}
                            {% for key, value in entity.auth.items() %}
                            <tr>
                                <td>{{ labels.get(key, key.replace('_', ' ').title()) }}</td>
                                <td>{{ value or " "}}</td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    {% else %}
                    -
                    {% endif %}
                </td>
            </tr>
            <tr>
                <td>Cards</td>
                <td>
                    {% if cards and cards|length > 0 %}
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Comment</th>
                                <th>Created at</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for c in cards %}
                            <tr>
                                <td>#{{ c.id }}</td>
                                <td>{{ c.comment or 'â€”' }}</td>
                                <td>{{ human_readable_date(c.created_at) | safe }}</td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    {% else %}
                    -
                    {% endif %}
                </td>
            </tr>
        </table>
        </p>

        <p><a href="{{ url_for('entity.edit', id=entity.id) }}">Edit</a></p>

        <h2>Balance</h2>

        {% if not balance.draft and not balance.completed %}
        <p>No transactions.</p>
        {% endif %}

        {% if balance.completed %}
        <p>
            Completed:
        <table>
            {% for currency,amount in balance.completed.items() %}
            <tr>
                <td class="right-align {% if amount|float < 0 %}amount-negative{% endif %}">
                    {{ amount}}
                </td>
                <td>{{ currency | upper }}</td>
            </tr>
            {% endfor %}
        </table>
        </p>
        {% endif %}

        {% if balance.draft %}
        <p>
            Draft (<a href="{{ url_for('transaction.list', entity_id=entity.id, status='draft') }}">Find</a>):
        <table>
            {% for currency,amount in balance.draft.items() %}
            <tr>
                <td class="right-align {% if amount|float < 0 %}amount-negative{% endif %}">
                    {{ amount}}
                </td>
                <td>{{ currency | upper }}</td>
            </tr>
            {% endfor %}
        </table>
        </p>
        {% endif %}
    </div>
    <div class="stats">
        <!-- Entity stats charts -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
        <div class="charts">
            <div class="chart-container">
                <h2>Balance Change by Day</h2>
                <canvas id="balance-change-chart"></canvas>
            </div>
            <div class="chart-container">
                <h2>Transactions by Day</h2>
                <canvas id="transactions-day-chart"></canvas>
            </div>
        </div>
        <script>
            const balanceData = {{ balance_changes | tojson }};
            const txDayData = {{ transactions_by_day | tojson }};

            const balanceDatasets = {};
            balanceData.forEach(item => {
                for (const curr in item.balance_changes) {
                    if (!balanceDatasets[curr]) {
                        balanceDatasets[curr] = {
                            label: curr.toUpperCase(),
                            data: [],
                            borderWidth: 1,
                            tension: 0.1
                        };
                    }
                }
            });

            balanceData.forEach(item => {
                const day = item.day;
                for (const curr in item.balance_changes) {
                    const value = item.balance_changes[curr];
                    balanceDatasets[curr].data.push({ x: day, y: value });
                }
            });

            const balanceChartConfig = {
                type: 'line',
                data: {
                    datasets: Object.values(balanceDatasets)
                },
                options: {
                    parsing: { xAxisKey: 'x', yAxisKey: 'y' },
                    interaction: { intersect: false, mode: 'nearest' },
                    scales: {
                        x: {
                            type: 'time',
                            time: { parser: 'yyyy-MM-dd', unit: 'day', tooltipFormat: 'PP' }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            };

            const txPoints = txDayData.map(item => ({ x: item.day, y: item.transaction_count }));
            const txChartConfig = {
                type: 'bar',
                data: {
                    datasets: [
                        {
                            label: 'Transactions',
                            data: txPoints,
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    parsing: { xAxisKey: 'x', yAxisKey: 'y' },
                    scales: {
                        x: {
                            type: 'time',
                            time: { parser: 'yyyy-MM-dd', unit: 'day', tooltipFormat: 'PP' }
                        },
                        y: {
                            beginAtZero: true,
                            precision: 0
                        }
                    }
                }
            };

            new Chart(document.getElementById('balance-change-chart'), balanceChartConfig);
            new Chart(document.getElementById('transactions-day-chart'), txChartConfig);
        </script>
    </div>
</div>
<div class="transactions-section">
    <h2>Transactions</h2>
    {{ transaction_list(transactions) }}
    {{ pagination_control(page, total, limit) }}
</div>
{% endblock %}